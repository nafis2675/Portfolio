Project: Interactive AI/ML Engineer Portfolio Website
Objective:
Create a visually striking, interactive, and professional multi-page portfolio website for an AI/ML Engineer. The website must be fully responsive, feature a dark "hacker" aesthetic, and include advanced UI/UX elements to impress potential employers and recruiters in the tech industry, ultimately aiming to secure interviews. It needs to be bilingual (English/Japanese).
Core Theme & Aesthetics:
Overall Vibe: Dark mode, futuristic, cyberpunk, "hacker terminal" feel. A consistent theme should be maintained across all pages.
Color Palette: Primarily black (#0a0a0a), dark grays, with a vibrant accent color for interactive elements and highlights (e.g., electric blue, neon green, or magenta).
Typography: Use a monospaced font (like 'Fira Code', 'Roboto Mono', or 'Source Code Pro') for the main text to enhance the "code" feel. Use a clean, modern sans-serif font for headings (e.g., 'Inter', 'Poppins', or 'Lato').
UI Elements:
Glassmorphism/Frosted Glass Effect: Use semi-transparent backgrounds with a blur effect for cards, modals, and the persistent navigation bar.
Glitch & Scanline Effects: Apply subtle glitch animations to headings or on hover events. A faint, persistent scanline effect over the background can enhance the "monitor" feel.
Particle Animations: A dynamic background with floating particles or a connecting neural network-style animation that can persist across pages.
Key Pages & Content (CV-based):
A consistent header and footer should be present on all pages, containing the main navigation, language switcher, and contact links.
Home/Landing Page (index.html):
An animated "Welcome" message with a typing effect (e.g., [INITIALIZING]..., [LOADING PROFILE]..., Welcome, User.).
Your Name and Title (e.g., "John Doe / AI & Machine Learning Engineer").
A brief, compelling bio that highlights a passion for solving complex problems using AI.
A call-to-action button like > Explore My Work that links to the Projects page.
Projects Page (projects.html):
Display projects in a grid of interactive cards.
Card Content: Project Title, short description, and tech stack tags.
Project Preview: On clicking a card, open a detailed modal window or navigate to a dedicated project detail page (project-detail.html).
The modal/page should contain an in-depth project description, a link to the GitHub repository, a live demo link (if available), and a small image gallery or embedded video.
About & Skills Page (about.html):
Profile Section: Display key information like Location, Nationality, and professional interests in a clean, organized manner.
Skills Matrix: Categorize skills: Programming Languages (Python, C++), Frameworks (TensorFlow, PyTorch, Scikit-learn), Tools (Docker, Git, AWS), and Concepts (NLP, Computer Vision, Reinforcement Learning). Visualize proficiency with a creative, interactive chart or matrix.
Experience Page (experience.html):
Present your work history as a vertical timeline.
Each entry should show the Company Name, Your Role, Dates of Employment, and a bulleted list of key responsibilities and achievements.
Contact Page (contact.html):
Provide clear links to your professional profiles: LinkedIn, GitHub.
Include an email address that can be copied to the clipboard with a single click.
Use a simple, direct presentation of contact methods.
Functionality & Interactivity:
Bilingual Support (EN/JP):
Implement a simple and effective language switching mechanism that persists across all pages. All text content must change when the language is toggled. Store translations in a structured JSON or JavaScript object.
Page Navigation & Transitions:
A persistent navigation bar (header) with clear links to each page (Home, Projects, About, Experience, Contact).
Implement smooth, subtle transitions between page loads to create a seamless experience.
Interactive Terminal (Optional but cool):
A small, faux terminal window on the homepage or in the footer where a user can type commands like help, go to projects, or contact.
Technical Specifications:
Frameworks: Use HTML5, CSS3, and modern JavaScript (ES6+). No external libraries like jQuery, but libraries for animations (e.g., anime.js or three.js for background effects) are acceptable.
Responsiveness: Must be fully responsive and look flawless on desktop, tablet, and mobile devices. Use Flexbox and Grid for layouts.
Code Quality: The code should be clean, well-commented, and organized into a logical file structure, with separate HTML files for each page and shared CSS/JS files.
Let me know if this updated prompt aligns with your vision for a multi-page portfolio.
